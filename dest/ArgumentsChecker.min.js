"use strict";function _toConsumableArray(r){if(Array.isArray(r)){for(var t=0,e=Array(r.length);t<r.length;t++)e[t]=r[t];return e}return Array.from(r)}function ArgumentsChecker(r){var t=this,e=function(r){return Object.prototype.toString.call(r).slice(8,-1).toLowerCase()},n=function(){return t.args.map(function(r){if("object"===(void 0===r?"undefined":_typeof(r)))return e(r);switch(void 0===r?"undefined":_typeof(r)){case"string":return'"'+r+'"';case"undefined":return"undefined";case"null":return"null";default:return r}})},o=null;if(Error.captureStackTrace){var u={};o=r?function(r,t){n();alert(r,"\n",u.stack),Error.captureStackTrace(u,t),console.error(r,"\n",u.stack)}:function(r,t){n();Error.captureStackTrace(u,t),console.error(r,"\n",u.stack)}}else o=r?function(r){var t=" Arguments: ["+n()+"]";throw alert(r+t),new Error(r+t)}:function(r){var t=" Arguments: ["+n()+"]";throw new Error(r+t)};"function"!=typeof this.amount&&(ArgumentsChecker.prototype.get=function(r){return t.args=[].concat(_toConsumableArray(r)),t},ArgumentsChecker.prototype.amount=function(r){var e=t.args.length;return e<r&&o("ArgumentsChecker: Expects at least "+r+" arguments, "+e+" given.",ArgumentsChecker.prototype.amount),t},ArgumentsChecker.prototype.types=function(r){return r.forEach(function(r,n){if(r){var u=e(t.args[n]);r.toLowerCase()!==u&&("object"===r&&(r="plain object"),"object"===u&&(u="plain object"),o("ArgumentsChecker: argument "+n+" expects "+r+", "+u+" given.",ArgumentsChecker.prototype.types))}}),t})}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r};